version: '3.2'
services:
  consumer:
    build:
      context: .
      dockerfile: docker/consumer/Dockerfile
    depends_on:
      - rabbitmq
      - mongodb
    environment:
      RABBITMQ_CONNECTION_STRING: amqp://guest:123456@rabbitmq
      MONGODB_CONNECTION_STRING: mongodb://root:123456@mongodb
      WAIT_FOR_DEPS: 'true'
    volumes:
      - type: bind
        source: ./logs
        target: /opt/consumer/host_logs
      - type: volume
        source: docker_cache
        target: /var/lib/docker
      - type: volume
        source: mitmdump_cache
        target: /root/.mitmproxy
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.send_redirects=0
      - net.ipv6.conf.all.forwarding=1
    privileged: true

  producer:
    build:
      context: .
      dockerfile: docker/producer/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_CONNECTION_STRING: amqp://guest:123456@rabbitmq
      WAIT_FOR_DEPS: 'true'

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_NODENAME: node@rabbitmq
    ports:
      - "15672:15672"
    volumes:
      - type: volume
        source: rabbitmq_cache
        target: /var/lib/rabbitmq
      - type: bind
        source: ./docker/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf

  mongodb:
    image: mongo:4.0-xenial
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - "27017:27017"
    volumes:
      - type: volume
        source: mongodb_cache
        target: /data/db

volumes:
  docker_cache:
  mitmdump_cache:
  rabbitmq_cache:
  mongodb_cache:
